from django.db import models
from django.utils import timezone



class Combine(models.Model):
    state = models.CharField(max_length=200)
    district = models.CharField(max_length=200)
    crop = models.CharField(max_length=200)
    year = models.CharField(max_length=200)
    season = models.CharField(max_length=200)
    area = models.CharField(max_length=200)
    production = models.CharField(max_length=200)
    yields = models.CharField(max_length=200)
    yield_units = models.CharField(max_length=200)
    
    class Meta:
        managed=False
        db_table='area_production_yield'
    


class soil_health_card(models.Model):
    state=models.CharField(max_length=200)
    district=models.CharField(max_length=200)
    sub_district=models.CharField(max_length=200)
    village=models.CharField(max_length=200)
    sample_no=models.CharField(max_length=200)
    farmer_name=models.CharField(max_length=200)
    land_area=models.CharField(max_length=200)
    khasra_no_dag_no=models.CharField(max_length=200)
    survey_no=models.CharField(max_length=200)
    latitude=models.CharField(max_length=200)
    longitude=models.CharField(max_length=200)
    ph=models.CharField(max_length=200)
    ec=models.CharField(max_length=200)
    oc=models.CharField(max_length=200)
    n=models.CharField(max_length=200)
    p=models.CharField(max_length=200)
    k=models.CharField(max_length=200)
    s=models.CharField(max_length=200)
    zn=models.CharField(max_length=200)
    fe=models.CharField(max_length=200)
    cu=models.CharField(max_length=200)
    mn=models.CharField(max_length=200)
    b=models.CharField(max_length=200)

    class Meta:
        managed=False
        db_table='soil_health_card_india'


class area_under_crop(models.Model):
    district = models.CharField(max_length=200)
    rice_autumn = models.IntegerField()
    rice_winter = models.IntegerField()
    rice_summer = models.IntegerField()
    rice_total_1 = models.IntegerField()
    jowar_kharif = models.IntegerField()
    jowar_rabi = models.IntegerField()
    jowar_total_2 = models.IntegerField()
    bajra_3 = models.IntegerField()
    maize_4 = models.IntegerField()
    ragi_5 = models.IntegerField()
    wheat_6 = models.IntegerField()
    barley_7 = models.IntegerField()
    other_cereals_and_millets_kharif = models.IntegerField()
    other_cereals_and_millets_rabi = models.IntegerField()
    other_cereals_and_millets_total_8 = models.IntegerField()
    total_cereals_and_millets_plus_1_to_8 = models.IntegerField()
    gram_9 = models.IntegerField()
    arhar_aka_tur_10 = models.IntegerField()
    other_pulses_kharif = models.IntegerField()
    other_pulses_rabi = models.IntegerField()
    other_pulses_misc  = models.IntegerField()
    other_pulses_total_11 = models.IntegerField()
    total_pulses_plus_9_to_11 = models.IntegerField()
    total_food_grain = models.IntegerField()
    sugarcane_12 = models.IntegerField()
    other_sugar_13 = models.IntegerField()
    total_sugar_plus_13_to_14 = models.IntegerField()
    black_pepper_14 = models.IntegerField()
    chillies_15 = models.IntegerField()
    ginger_16 = models.IntegerField()
    turmeric_17 = models.IntegerField()
    cardamom_19 = models.IntegerField()
    betulnet_20 = models.IntegerField()
    garlic_21 = models.IntegerField()
    coriander_22 = models.IntegerField()
    other_condiments_and_spices_23 = models.IntegerField()
    total_condiments_and_spices_plus_14_to_23 = models.IntegerField()
    banana_24 = models.IntegerField()
    mango_25 = models.IntegerField()
    citrus_fruits_26 = models.IntegerField()
    grapes_27 = models.IntegerField()
    pome_fruits_28 = models.IntegerField()
    papaya_29 = models.IntegerField()
    apple_30 = models.IntegerField()
    other_fruits_31 = models.IntegerField()
    total_fruits_plus_24_to_31 = models.IntegerField()
    cashewnut_32 = models.IntegerField()
    other_dry_fruits_33 = models.IntegerField()
    total_dry_fruits_plus_32_to_33 = models.IntegerField()
    total_fruits_drydruits_plus_24_to_33 = models.IntegerField()
    potato_34 = models.IntegerField()
    tapioca_35 = models.IntegerField()
    sweet_potato = models.IntegerField()
    onion = models.IntegerField()
    other_vegetables_kharif = models.IntegerField()
    other_vegetables_rabi = models.IntegerField()
    other_vegetables_misc = models.IntegerField()
    other_vegetables_total = models.IntegerField()
    total_vegetables = models.IntegerField()
    total_fruits_and_vegetable = models.IntegerField()
    other_food_crops = models.IntegerField()
    total_food_crop = models.IntegerField()
    groundnut = models.IntegerField()
    castor_seed = models.IntegerField()
    sesamum = models.IntegerField()
    rapeseed_and_mustard = models.IntegerField()
    linseed = models.IntegerField()
    soyabean = models.IntegerField()
    coconut = models.IntegerField()
    niger_seed = models.IntegerField()
    sunflower = models.IntegerField()
    safflower = models.IntegerField()
    other_oilseeds = models.IntegerField()
    total_oilseeds = models.IntegerField()
    cotton = models.IntegerField()
    jute = models.IntegerField()
    mesta = models.IntegerField()
    sanhemp = models.IntegerField()
    other_fibres = models.IntegerField()
    total_fibres = models.IntegerField()
    indigo = models.IntegerField()
    other_dyes_and_tanning_materials = models.IntegerField()
    total_dyes_and_tanning_materials = models.IntegerField()
    opium = models.IntegerField()
    tobacco = models.IntegerField()
    chinchona = models.IntegerField()
    indian_hemp = models.IntegerField()
    tea = models.IntegerField()
    coffee = models.IntegerField()
    rubber = models.IntegerField()
    other_plantation_crops = models.IntegerField()
    total_drugs_narcotics_and_plantation_crops = models.IntegerField()
    guar_seed = models.IntegerField()
    oats = models.IntegerField()
    fodder_crops = models.IntegerField()
    green_manure = models.IntegerField()
    other_non_food_crops = models.IntegerField()
    total_non_food_crop = models.IntegerField()
    total_cropped_area = models.IntegerField()
    area_sown_more_than_once = models.IntegerField()
    net_area_sown = models.IntegerField()
    state = models.CharField(max_length=200)
    year = models.CharField(max_length=200)
    unit = models.CharField(max_length=200)

    class Meta:
        managed=False
        db_table='area_under_crops_csv'


class crop_irrigated(models.Model):
    # ids = models.IntegerField()
    district = models.IntegerField()
    rice_autumn = models.IntegerField()
    rice_kharif = models.IntegerField()
    rice_winter = models.IntegerField()
    rice_summer = models.IntegerField()
    rice_total_1 = models.IntegerField()
    jowar_kharif = models.IntegerField()
    jowar_rabi = models.IntegerField()
    jowar_total_2 = models.IntegerField()
    bajra_3 = models.IntegerField()
    maize_4 = models.IntegerField()
    ragi_5 = models.IntegerField()
    wheat_6 = models.IntegerField()
    barley_7 = models.IntegerField()
    other_cereals_and_millets_kharif = models.IntegerField()
    other_cereals_and_millets_misc = models.IntegerField()
    other_cereals_and_millets_rabi = models.IntegerField()
    other_cereals_and_millets_total_8 = models.IntegerField()
    total_cereals_and_millets_plus_1_to_8 = models.IntegerField()
    gram_9 = models.IntegerField()
    arhar_aka_tur_10 = models.IntegerField()
    other_pulses_kharif = models.IntegerField()
    other_pulses_misc = models.IntegerField()
    other_pulses_rabi = models.IntegerField()
    other_pulses_total_11 = models.IntegerField()
    total_pulses_plus_9_to_11 = models.IntegerField()
    total_food_grain = models.IntegerField()
    sugarcane_12 = models.IntegerField()
    condiments_and_spices_total_13 = models.IntegerField()
    fruits_and_vegetables_total_14 = models.IntegerField()
    other_food_crops_15 = models.IntegerField()
    food_crop_total_plus_1_to_15 = models.IntegerField()
    groundnut_16 = models.IntegerField()
    sesamum_17 = models.IntegerField()
    rapeseed_and_mustard_18 = models.IntegerField()
    linseed_19 = models.IntegerField()
    soyabean_20 = models.IntegerField()
    sunflower_21 = models.IntegerField()
    other_oilseeds_22 = models.IntegerField()
    total_oilseeds_plus_16_to_22 = models.IntegerField()
    cotton_23 = models.IntegerField()
    tobacco_24 = models.IntegerField()
    fodder_crops_25 = models.IntegerField()
    other_non_food_crops_26 = models.IntegerField()
    non_food_crop_total_plus_16_to_26 = models.IntegerField()
    total_irrigated_area_plus_1_to_26 = models.IntegerField()
    state = models.CharField(max_length=200)
    year = models.CharField(max_length=200)
    unit = models.CharField(max_length=200)

    class Meta:
        managed=False
        db_table='crop_irrigated_area_csv'



class source_irrigated(models.Model):
    district = models.CharField(max_length=200)
    net_government_canal = models.IntegerField()
    net_private_canal = models.IntegerField()
    net_total_canal = models.IntegerField()
    net_tank = models.IntegerField()
    net_tubewell = models.IntegerField()
    net_other_well = models.IntegerField()
    net_total_well = models.IntegerField()
    net_other_source = models.IntegerField()
    net_irrigated_area = models.IntegerField()
    gross_government_canal = models.IntegerField()
    gross_private_canal = models.IntegerField()
    gross_total_canal = models.IntegerField()
    gross_tank = models.IntegerField()
    gross_tubewell = models.IntegerField()
    gross_other_well = models.IntegerField()
    gross_total_well = models.IntegerField()
    gross_other_source = models.IntegerField()
    gross_irrigated_area = models.IntegerField()
    state = models.CharField(max_length=200)
    year = models.CharField(max_length=200)
    unit = models.CharField(max_length=200)

    class Meta:
        managed=False
        db_table='source_irrigated_area_csv'




